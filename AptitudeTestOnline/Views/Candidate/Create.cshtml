@model AptitudeTestOnline.Models.AccountModel

@{
    ViewBag.Title = "Create";
}
<div class="col-sm-12">
    <br />
    <div class="col-sm-3"></div>
    <div class="col-sm-6">
        <div class="text-center text-primary">
            <h2>Apply CV</h2>
        </div>
        <hr />
        <br />


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal text-info">
                <div class="text-center text-info">
                    <h4 >Enter your information</h4>
                </div>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group ">
                    @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2  " })
                    <div class="col-md-10">
                        
                        @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Interest, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Interest, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Interest, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                

                <div class="form-group pull-right">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Apply" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
        <br />
        <br />
        <hr />


        <div class="pull-left">
            @Html.ActionLink("Back to List", "Index")
        </div>
        <div class="col-sm-3"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
