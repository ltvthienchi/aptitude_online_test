@model PagedList.IPagedList<AptitudeTestOnline.Models.QuestionsModels>
@using PagedList.Mvc
@{
    ViewBag.Title = "_Pagination";
    IEnumerable<AptitudeTestOnline.Models.QuestionsModels> Questions =
        ViewData["Questions"] as IEnumerable<AptitudeTestOnline.Models.QuestionsModels>;
    IEnumerable<AptitudeTestOnline.Models.TypeOfQuestionModel> TypeOfQuestion =
        ViewData["TypeOfQuestion"] as IEnumerable<AptitudeTestOnline.Models.TypeOfQuestionModel>;
}


<table class="table table-bordered table-hover">
    <tr class="bg-default">
        <th class="w-1">
            #
        </th>
        <th class="w-5">
            Questions Name
        </th>
        <th class="w-2">
            Questions Type
        </th>
        <th class="w-1">
            Mark
        </th>
        <th class="w-1">
            Tools
        </th>
    </tr>

    @{int i = 1;}
    @foreach (var item in Model)
    {
        <tr>
            <td>
                <p>@i</p>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuestionsName)
            </td>
            <td>
                @foreach (var itemType in TypeOfQuestion)
                {
                    if (item.TypeOfQuestion == itemType.TypeOfQuestion)
                    {
                        @itemType.NameTypeOfQuestion;
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mark)
            </td>
            <td>
                @Html.ActionLink(" ", "Edit", new { id = item.QuestionsID }, htmlAttributes: new { @class = "fas fa-edit btn-admin" })
            </td>
        </tr>
        i++;
    }

</table>

Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("GetPagination", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new AjaxOptions() {HttpMethod = "GET", UpdateTargetId = "customer_area"  } ))

